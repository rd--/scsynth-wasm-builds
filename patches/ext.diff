diff --git a/server/scsynth/CMakeLists.txt b/server/scsynth/CMakeLists.txt
index e3547a6e1..2459cf75b 100644
--- a/server/scsynth/CMakeLists.txt
+++ b/server/scsynth/CMakeLists.txt
@@ -139,6 +139,79 @@ if (EMSCRIPTEN)
 		FFT2InterfaceTable.cpp
 		FeatureDetection.cpp
 		PV_ThirdParty.cpp
+
+                # sc3-plugins/source/BhobUGens/BhobChaos.cpp
+                # sc3-plugins/source/BhobUGens/BhobFFT.cpp
+                sc3-plugins/source/AntiAliasingOscillators/AntiAliasingOscillators.cpp
+                sc3-plugins/source/BhobUGens/BhobFilt.cpp
+                sc3-plugins/source/BhobUGens/BhobGrain.cpp
+                sc3-plugins/source/BhobUGens/BhobNoise.cpp
+                sc3-plugins/source/DWGUGens/DWGPlucked.cpp
+                sc3-plugins/source/JoshUGens/JoshGrainUGens.cpp
+                sc3-plugins/source/SkUGens/FM7.cpp
+                sc3-plugins/source/VOSIMUGens/VOSIM.cpp
+
+                sc3-plugins/source/MCLDUGens/MCLDChaosUGens.cpp
+                sc3-plugins/source/MCLDUGens/MCLDFilterUGens.cpp
+                sc3-plugins/source/MCLDUGens/MCLDOscUGens.cpp
+
+                portedplugins/plugins/AnalogFoldOsc/AnalogFoldOsc.cpp
+                portedplugins/plugins/AnalogFoldOsc/buchla259cell.cpp
+                portedplugins/plugins/AnalogFoldOsc/buchla259waveshaper.cpp
+                portedplugins/plugins/Rongs/Rongs.cpp
+                portedplugins/plugins/VA1Pole/VA1Pole.cpp
+                portedplugins/plugins/VADiodeFilter/VADiodeFilter.cpp
+                portedplugins/plugins/VAKorg35/VAKorg35.cpp
+                portedplugins/plugins/VALadder/VALadder.cpp
+                portedplugins/plugins/VadimFilter/VadimFilter.cpp
+                portedplugins/plugins/mutated/mi-modal.cpp
+                portedplugins/plugins/odinfilters/DiodeFilter.cpp
+                portedplugins/plugins/odinfilters/Korg35Filter.cpp
+                portedplugins/plugins/odinfilters/LadderFilter.cpp
+                portedplugins/plugins/odinfilters/VAOnePoleFilter.cpp
+
+                # vb_UGens/projects/vbPVoc/vbPVoc.cpp
+                vb_UGens/projects/RCD/vb.rcd.cpp
+                vb_UGens/projects/SCM/vb.scm.cpp
+                vb_UGens/projects/vbChebyFilt/vbChebyFilt.cpp
+                vb_UGens/projects/vbFourses/vbFourses.cpp
+                vb_UGens/projects/vbJonVerb/vbJonVerb.cpp
+                vb_UGens/projects/vbUtils/vbUtils.cpp
+
+                squinewave/supercollider/plugins/Squine/Squine.cpp
+
+                # sc3-rdu/cpp/DelayMap.cpp
+                # sc3-rdu/cpp/DelaySet.cpp
+                # sc3-rdu/cpp/DelaySetBuf.cpp
+                # sc3-rdu/cpp/Dl.cpp
+                # sc3-rdu/cpp/LagC.cpp
+                # sc3-rdu/cpp/LoopSet.cpp
+                # sc3-rdu/cpp/PV_DecayTable.cpp
+                # sc3-rdu/cpp/PV_Split.cpp
+                # sc3-rdu/cpp/Dx7Env.cpp
+                # sc3-rdu/cpp/SamplerIndex.cpp
+                # sc3-rdu/cpp/ShufflerL.cpp
+                # sc3-rdu/cpp/TracePlay.cpp
+                # sc3-rdu/cpp/TraceRead.cpp
+                sc3-rdu/cpp/Bezier.cpp
+                sc3-rdu/cpp/BufMemCpy.cpp
+                sc3-rdu/cpp/DustRange.cpp
+                sc3-rdu/cpp/Dx7.cpp
+                sc3-rdu/cpp/ExpRandN.cpp
+                sc3-rdu/cpp/Freezer.cpp
+                sc3-rdu/cpp/IRandN.cpp
+                sc3-rdu/cpp/LinRandN.cpp
+                sc3-rdu/cpp/ObxdFilter.cpp
+                sc3-rdu/cpp/RandN.cpp
+                sc3-rdu/cpp/ShufflerB.cpp
+                sc3-rdu/cpp/SvfBp.cpp
+                sc3-rdu/cpp/SvfHp.cpp
+                sc3-rdu/cpp/SvfLp.cpp
+                sc3-rdu/cpp/TExpRandN.cpp
+                sc3-rdu/cpp/TLinRandN.cpp
+                sc3-rdu/cpp/TRandN.cpp
+                sc3-rdu/cpp/TScramble.cpp
+
 	)
 	foreach(plugin ${plugin_sources_rel})
 		string(CONCAT plugin_abs ${CMAKE_SOURCE_DIR}/server/plugins/ ${plugin} )
@@ -297,7 +370,7 @@ endif()
 
 if (EMSCRIPTEN)
 	set_target_properties(libscsynth boost_system_lib boost_filesystem_lib PROPERTIES LINK_FLAGS "-s USE_PTHREADS=1 -s WASM=1 -pthread -s DISABLE_EXCEPTION_CATCHING=0")
-	set_target_properties(scsynth PROPERTIES LINK_FLAGS "-s USE_PTHREADS=1 -s WASM=1 -pthread --bind -s DISABLE_EXCEPTION_CATCHING=0 -s INITIAL_MEMORY=67108864 -s EXTRA_EXPORTED_RUNTIME_METHODS=[\"ccall\",\"callMain\"] --pre-js ${CMAKE_SOURCE_DIR}/wasm/pre.js")
+	set_target_properties(scsynth PROPERTIES LINK_FLAGS "-s USE_PTHREADS=1 -s WASM=1 -pthread --bind -s DISABLE_EXCEPTION_CATCHING=0 -s INITIAL_MEMORY=268435456 -s EXTRA_EXPORTED_RUNTIME_METHODS=[\"ccall\",\"callMain\"] --pre-js ${CMAKE_SOURCE_DIR}/wasm/pre.js")
 	set_property(TARGET scsynth libscsynth
 							 APPEND PROPERTY COMPILE_FLAGS "-pthread -DSTATIC_PLUGINS")
 endif()
diff --git a/server/scsynth/SC_ComPort.cpp b/server/scsynth/SC_ComPort.cpp
index 27687279d..10dd37dbb 100644
--- a/server/scsynth/SC_ComPort.cpp
+++ b/server/scsynth/SC_ComPort.cpp
@@ -152,7 +152,7 @@ static bool UnrollOSCPacket(World* inWorld, int inSize, char* inData, OSC_Packet
 SC_Thread gAsioThread;
 boost::asio::io_service ioService;
 
-const int kTextBufSize = 65536;
+const int kTextBufSize = 16777216; // 65536 -> 524288 -> 4194304 (rd)
 
 
 static void udp_reply_func(struct ReplyAddress* addr, char* msg, int size) {
diff --git a/server/scsynth/SC_Lib_Cintf.cpp b/server/scsynth/SC_Lib_Cintf.cpp
index a47a1232d..7e837df54 100644
--- a/server/scsynth/SC_Lib_Cintf.cpp
+++ b/server/scsynth/SC_Lib_Cintf.cpp
@@ -109,6 +109,60 @@ extern void DynNoise_Load(InterfaceTable* table);
 extern void FFT_UGens_Load(InterfaceTable* table);
 extern void iPhone_Load(InterfaceTable* table);
 
+// wasm-ld: error: duplicate symbol: Mirroring(float, float, float) >>> defined in libscsynth.a(BhobChaos.cpp.o) libscsynth.a(BhobFilt.cpp.o)
+// wasm-ld: error: duplicate symbol: ft >>> defined in libscsynth.a(FFTInterfaceTable.cpp.o) libscsynth.a(BhobFFT.cpp.o)
+// extern void BhobChaos_Load(InterfaceTable* table);
+// extern void BhobPV_Load(InterfaceTable* table);
+
+extern void AntiAliasingOscillators_Load(InterfaceTable* table);
+extern void BhobFilt_Load(InterfaceTable* table);
+extern void BhobGrains_Load(InterfaceTable* table);
+extern void BhobNoise_Load(InterfaceTable* table);
+extern void BhobNoise_Load(InterfaceTable* table);
+extern void DWGPlucked_Load(InterfaceTable* table);
+extern void MCLDChaos_Load(InterfaceTable *table);
+extern void MCLDFilter_Load(InterfaceTable *table);
+extern void MCLDOsc_Load(InterfaceTable *table);
+extern void JoshGrain_Load(InterfaceTable *table);
+extern void FM7_Load(InterfaceTable *table);
+extern void VOSIM_Load(InterfaceTable *table);
+
+extern void AnalogFoldOscUGens_Load(InterfaceTable *table);
+extern void RongsUGens_Load(InterfaceTable *table);
+extern void VA1PoleUGens_Load(InterfaceTable *table);
+extern void VADiodeFilterUGens_Load(InterfaceTable *table);
+extern void VAKorg35UGens_Load(InterfaceTable *table);
+extern void VALadderUGens_Load(InterfaceTable *table);
+extern void VadimFilterUGens_Load(InterfaceTable *table);
+
+// extern void VBPVoc_Load(InterfaceTable* table);
+extern void RCD_Load(InterfaceTable* table);
+extern void SCM_Load(InterfaceTable* table);
+extern void VBChebyFilt_Load(InterfaceTable* table);
+extern void VBFourses_Load(InterfaceTable* table);
+extern void VBJonVerb_Load(InterfaceTable* table);
+extern void Slide_Load(InterfaceTable* table);
+
+extern void SquineUGens_Load(InterfaceTable* table);
+
+extern void Bezier_Load(InterfaceTable* table);
+extern void BufMemCpy_Load(InterfaceTable* table);
+extern void Dx7_Load(InterfaceTable* table);
+extern void DustRange_Load(InterfaceTable* table);
+extern void ExpRandN_Load(InterfaceTable* table);
+extern void Freezer_Load(InterfaceTable* table);
+extern void IRandN_Load(InterfaceTable* table);
+extern void LinRandN_Load(InterfaceTable* table);
+extern void ObxdFilter_Load(InterfaceTable* table);
+extern void RandN_Load(InterfaceTable* table);
+extern void ShufflerB_Load(InterfaceTable* table);
+extern void SvfBp_Load(InterfaceTable* table);
+extern void SvfHp_Load(InterfaceTable* table);
+extern void SvfLp_Load(InterfaceTable* table);
+extern void TExpRandN_Load(InterfaceTable* table);
+extern void TLinRandN_Load(InterfaceTable* table);
+extern void TRandN_Load(InterfaceTable* table);
+extern void TScramble_Load(InterfaceTable* table);
 
 void deinitialize_library() {
 #ifdef _WIN32
@@ -166,6 +220,59 @@ void initialize_library(const char* uGensPluginPath) {
     iPhone_Load(&gInterfaceTable);
 #    endif
     FFT_UGens_Load(&gInterfaceTable);
+
+    // BhobChaos_Load(&gInterfaceTable);
+    // BhobPV_Load(&gInterfaceTable);
+    AntiAliasingOscillators_Load(&gInterfaceTable);
+    BhobFilt_Load(&gInterfaceTable);
+    BhobGrains_Load(&gInterfaceTable);
+    BhobNoise_Load(&gInterfaceTable);
+    DWGPlucked_Load(&gInterfaceTable);
+    FM7_Load(&gInterfaceTable);
+    JoshGrain_Load(&gInterfaceTable);
+    MCLDChaos_Load(&gInterfaceTable);
+    MCLDFilter_Load(&gInterfaceTable);
+    MCLDOsc_Load(&gInterfaceTable);
+    VOSIM_Load(&gInterfaceTable);
+
+    AnalogFoldOscUGens_Load(&gInterfaceTable);
+    RongsUGens_Load(&gInterfaceTable);
+    VA1PoleUGens_Load(&gInterfaceTable);
+    VADiodeFilterUGens_Load(&gInterfaceTable);
+    VAKorg35UGens_Load(&gInterfaceTable);
+    VALadderUGens_Load(&gInterfaceTable);
+    VadimFilterUGens_Load(&gInterfaceTable);
+
+    // VBPVoc_Load(&gInterfaceTable);
+    RCD_Load(&gInterfaceTable);
+    SCM_Load(&gInterfaceTable);
+    Slide_Load(&gInterfaceTable);
+    VBChebyFilt_Load(&gInterfaceTable);
+    VBChebyFilt_Load(&gInterfaceTable);
+    VBFourses_Load(&gInterfaceTable);
+    VBJonVerb_Load(&gInterfaceTable);
+
+    SquineUGens_Load(&gInterfaceTable);
+
+    Bezier_Load(&gInterfaceTable);
+    BufMemCpy_Load(&gInterfaceTable);
+    Dx7_Load(&gInterfaceTable);
+    DustRange_Load(&gInterfaceTable);
+    ExpRandN_Load(&gInterfaceTable);
+    Freezer_Load(&gInterfaceTable);
+    IRandN_Load(&gInterfaceTable);
+    LinRandN_Load(&gInterfaceTable);
+    ObxdFilter_Load(&gInterfaceTable);
+    RandN_Load(&gInterfaceTable);
+    ShufflerB_Load(&gInterfaceTable);
+    SvfBp_Load(&gInterfaceTable);
+    SvfHp_Load(&gInterfaceTable);
+    SvfLp_Load(&gInterfaceTable);
+    TExpRandN_Load(&gInterfaceTable);
+    TLinRandN_Load(&gInterfaceTable);
+    TRandN_Load(&gInterfaceTable);
+    TScramble_Load(&gInterfaceTable);
+
     return;
 #endif // STATIC_PLUGINS
 
diff --git a/wasm/configure.sh b/wasm/configure.sh
index 53cae82c1..c2f87d9c2 100755
--- a/wasm/configure.sh
+++ b/wasm/configure.sh
@@ -1,2 +1,2 @@
 #!/bin/bash
-emcmake cmake -DSC_EL=no -DSUPERNOVA=no -DSC_HIDAPI=no -DNO_LIBSNDFILE=yes -DSC_QT=no -DNO_AVAHI=yes -DSC_ABLETON_LINK=no -DCMAKE_BUILD_TYPE="Release" -Wno-dev -DPTHREADS_LIBRARY=ignore -DSSE=no -DSSE2=no -DNO_X11=yes --target scsynth ..
+emcmake cmake -DSC_EL=no -DSUPERNOVA=no -DSC_HIDAPI=no -DNO_LIBSNDFILE=yes -DSC_QT=no -DNO_AVAHI=yes -DSC_ABLETON_LINK=no -DCMAKE_BUILD_TYPE="Release" -Wno-dev -DPTHREADS_LIBRARY=ignore -DSSE=no -DSSE2=no -DNO_X11=yes ..

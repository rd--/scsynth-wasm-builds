_thenElse_3(
  _thenElse_3(
    _primitiveLoadPackageSequence_1([
      "File",
      "Url",
      "CacheStorage",
      "LibraryItem",
      "HashFunction",
      "Piecewise",
      "Prototype",
      "Array",
      "AssociationList",
      "Bag",
      "Box",
      "CategoryDictionary",
      "DirectedEdge",
      "Graph",
      "Heap",
      "Histogram",
      "HuffmanCoding",
      "LinkedList",
      "MergeSort",
      "NumericArray",
      "PatienceSort",
      "PriorityQueue",
      "QuickSort",
      "RunArray",
      "Set",
      "Slice",
      "Sort",
      "Span",
      "SparseArray",
      "Stack",
      "SortedList",
      "Table",
      "TemporalData",
      "TimeSeries",
      "TypedDictionary",
      "Tree",
      "Tuple",
      "UndirectedEdge",
      "WeakMap",
      "WeightedData",
      "BitSet",
      "IdentityBag",
      "IdentitySet",
      "Matrix",
      "ResidueSet",
      "Missing",
      "Complex",
      "EisensteinInteger",
      "Interval",
      "LargeInteger",
      "Residue",
      "Fraction",
      "Decimal",
      "GeoJson",
      "Schema",
      "Quantity",
      "QuantityArray",
      "Frequency",
      "Length",
      "Mass",
      "PlaneAngle",
      "SiPrefix",
      "SiUnit",
      "Time",
      "SymbolicExpression",
      "Geometry",
      "Arc",
      "Ball",
      "BarycentricCoordinates",
      "BezierCurve",
      "BipolarCoordinates",
      "CartesianCoordinates",
      "Cartography",
      "Circle",
      "Contour",
      "ConvexHull",
      "DelaunayTriangulation",
      "Disk",
      "DoyleSpiral",
      "Ellipse",
      "FractalCurve",
      "GeneralisedCircle",
      "GeodeticCoordinates",
      "GeometryCollection",
      "HalfPlane",
      "Heightmap",
      "HexagonalCoordinates",
      "HexagonalEfficientCoordinates",
      "InfiniteLine",
      "InfinitePlane",
      "Line",
      "LineSegment",
      "Parallelogram",
      "Perspective",
      "Plane",
      "PolarCoordinates",
      "PlanarCoordinates",
      "Point",
      "PointCloud",
      "Polygon",
      "PolygonMesh",
      "PolygonWithHoles",
      "Polyhedron",
      "AxonometricProjection",
      "Rectangle",
      "Simplex",
      "Sphere",
      "StadiumShape",
      "Superellipse",
      "Tetrahedron",
      "FourVector",
      "CylindricalCoordinates",
      "SphericalCoordinates",
      "Triangle",
      "CrystalStructure",
      "Bitmap",
      "Colour",
      "ColourGradient",
      "ColourPalette",
      "Graymap",
      "Image",
      "PerspectiveDrawing",
      "Svg",
      "Plot",
      "Writing",
      "LineDrawing",
      "HelpIndex",
      "ApproximateMathFunctions",
      "Bessel",
      "Binomial",
      "Combinatorics",
      "DifferentialEquations",
      "DistanceFunctions",
      "EasingFunctions",
      "Elementwise",
      "FeatureDetection",
      "Fourier",
      "Gamma",
      "HyperbolicFunctions",
      "IntegerSequence",
      "Integrals",
      "Interpolation",
      "IterativeMaps",
      "MatrixFunctions",
      "NumericalFunctions",
      "Optimization",
      "ParametricEquations",
      "Permutations",
      "Primes",
      "Shuffle",
      "SignalProcessing",
      "SpecialFunctions",
      "Statistics",
      "TrigonometricFunctions",
      "UnivariatePolynomial",
      "WindowFunction",
      "Iterator",
      "Stream",
      "PositionableStream",
      "WriteStream",
      "BlockStream",
      "CollectionStream",
      "MutableCollectionStream",
      "AsciiStream",
      "Utf8Stream",
      "AliasMethod",
      "LinearCongruential",
      "MersenneTwister",
      "PoissonDiskSampling",
      "ProbabilityDistribution",
      "RandomFixedSum",
      "RandomProcess",
      "Sfc32",
      "SplitMix",
      "BernoulliDistribution",
      "BetaDistribution",
      "BetaBinomialDistribution",
      "BinomialDistribution",
      "CauchyDistribution",
      "DirichletDistribution",
      "DiscreteUniformDistribution",
      "EmpiricalDistribution",
      "EpanechnikovDistribution",
      "ExponentialDistribution",
      "ExtremeValueDistribution",
      "FRatioDistribution",
      "GammaDistribution",
      "GeometricDistribution",
      "HypergeometricDistribution",
      "InverseGaussianDistribution",
      "LaplaceDistribution",
      "LevyDistribution",
      "LogisticDistribution",
      "LogNormalDistribution",
      "MultinormalDistribution",
      "MultivariateTDistribution",
      "NoncentralBetaDistribution",
      "NoncentralChiSquareDistribution",
      "NormalDistribution",
      "ParetoDistribution",
      "PoissonDistribution",
      "ReciprocalDistribution",
      "SkewNormalDistribution",
      "StableDistribution",
      "StudentTDistribution",
      "TriangularDistribution",
      "UniformDistribution",
      "WeibullDistribution",
      "BernoulliProcess",
      "BinomialProcess",
      "BrownianBridgeProcess",
      "ContinuousMarkovProcess",
      "CoxIngersollRossProcess",
      "DiscreteMarkovProcess",
      "FractionalBrownianMotionProcess",
      "FractionalGaussianNoiseProcess",
      "GeometricBrownianMotionProcess",
      "HiddenMarkovProcess",
      "OrnsteinUhlenbeckProcess",
      "PoissonProcess",
      "RandomWalkProcess",
      "TelegraphProcess",
      "WienerProcess",
      "Event",
      "EventTarget",
      "FilePath",
      "FileSystem",
      "Headers",
      "Method",
      "MessageEvent",
      "Navigator",
      "ReadableStream",
      "Scheduling",
      "Storage",
      "SubProcess",
      "Trait",
      "Transcript",
      "Type",
      "UrlQueryParameters",
      "WebSocket",
      "Window",
      "Location",
      "Reflection",
      "AsciiString",
      "Html",
      "Markdown",
      "QuotedString",
      "RegularExpression",
      "Unicode",
      "CalendarDuration",
      "Clock",
      "Date",
      "DateAndTime",
      "Duration",
      "TimeStamp",
      "TimeInterval",
      "Categories",
      "DocumentationTest",
      "HelpFile",
      "TerseGuide",
      "TerseReference",
      "SoundFile",
      "Apl",
    ]),
    sl.annotateFunction(function (_unused) {
      /* ArityCheck */
      if (arguments.length !== 1) {
        const errorMessage = "Arity: expected 1, _unused";
        throw new Error(errorMessage);
      } /* Statements */
      return _primitiveReadLocalBinaryFile_1("config/preferences.json");
    }, ["unused"]),
    sl.annotateFunction(function (_reason) {
      /* ArityCheck */
      if (arguments.length !== 1) {
        const errorMessage = "Arity: expected 1, _reason";
        throw new Error(errorMessage);
      } /* Statements */
      return _error_2(
        _system,
        _plusSignPlusSign_2("Failed to load package sequence?: ", _reason),
      );
    }, ["reason"]),
  ),
  sl.annotateFunction(function (_byteArray) {
    /* ArityCheck */
    if (arguments.length !== 1) {
      const errorMessage = "Arity: expected 1, _byteArray";
      throw new Error(errorMessage);
    } /* Statements */
    return _atPut_3(
      _cache_1(_system),
      "preferences",
      _parseJson_1(_utf8String_1(_byteArray)),
    );
  }, ["byteArray"]),
  sl.annotateFunction(function (_reason) {
    /* ArityCheck */
    if (arguments.length !== 1) {
      const errorMessage = "Arity: expected 1, _reason";
      throw new Error(errorMessage);
    } /* Statements */
    return _error_2(
      _system,
      _plusSignPlusSign_2("Failed to load preferences?: ", _reason),
    );
  }, ["reason"]),
);
